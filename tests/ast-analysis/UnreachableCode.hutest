import Data.List
import Data.Char(toUpper)
import TestHelper

tests = map (assertIssue . atLine kind) (markerLines "UNREACHABLE" thisSource)
     ++ map (assertNoIssue . atLine kind) (markerLines "NORMAL" thisSource)
 where
    kind = IssueKind "Lang.Php.Ast.Analysis.Reachability" "unreachableCode"

================================= BEGIN TEST =================================
<?php

function foo()
{
    return;
    echo 'UNREACHABLE';
}

function bar()
{
    if(rand() % 2) {
        echo 'NORMAL';
        return;
    } else {
        return;
    }

    echo 'UNREACHABLE';
}

function loopsBreak()
{
    while(rand() % 2) {
        break;
        echo 'UNREACHABLE';
    }

    do {
        break;
        echo 'UNREACHABLE';
    } while(rand() % 2);

    for($i = 0; $i < 10; $i++) {
        break;
        echo 'UNREACHABLE';
    }

    foreach(array(1,2,3) as $x) {
        break;
        echo 'UNREACHABLE';
    }
}

function loopContinue()
{
    while(rand() % 2) {
        continue;
        echo 'UNREACHABLE';
    }

    do {
        continue;
        echo 'UNREACHABLE';
    } while(rand() % 2);

    for($i = 0; $i < 10; $i++) {
        continue;
        echo 'UNREACHABLE';
    }

    foreach(array(1,2,3) as $x) {
        continue;
        echo 'UNREACHABLE';
    }
}

function aSwitch()
{
    switch(rand() % 2) {
        case 0:
            break;
            echo 'UNREACHABLE';

        case 1:
            return;
            break; // NORMAL

        default:
            break;
            echo 'UNREACHABLE';
    }
    echo 'NORMAL';

    switch(rand() % 2) {
        case 0: break;
        case 1: break;
        default: break;
    }
    echo 'NORMAL';

    // switch without 'default' can always return
    switch(rand() % 2) {
        case 0: return;
    }
    echo 'NORMAL';
}

function breakParam()
{
    while(true) {
        while(true) {
            while(true) {
                break 2;
            }
            echo 'UNREACHABLE';
        }
        echo 'NORMAL';
    }
    echo 'NORMAL';
}

function continueParam()
{
    while(true) {
        while(true) {
            while(true) {
                continue 2;
            }
            echo 'UNREACHABLE';
        }
        echo 'NORMAL';
    }
    echo 'NORMAL';
}

function ifNoElse()
{
    if(rand() % 2) {
        return;
    }
    echo 'NORMAL';
}

function exceptions()
{
    try {
        throw new Exception();
        echo 'UNREACHABLE';
    } catch(Exception $e) {
        echo 'NORMAL';
    }
    echo 'NORMAL'; // reachable, since we can return here from the catch-block
}

function reporting()
{
    return;
    echo 'UNREACHABLE'; // we detect this but omit following instructions
    echo 'NORMAL';
    echo 'NORMAL';
}

function unreachBreak()
{
    // These breaks are in fact unreachable, but it is somewhat a good practice
    // to put a 'break' at the end of each 'case' block regardless of its
    // reachability.

    switch(rand() % 2) {
        case 0:
            return 0;
            break; // NORMAL

        default:
            return 1;
            break; // NORMAL
    }
}

return; // yes, you can return from top-level code
echo 'UNREACHABLE';
